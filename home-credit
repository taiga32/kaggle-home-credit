{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "d78c2146",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-03-14T13:23:55.188246Z",
     "iopub.status.busy": "2024-03-14T13:23:55.187881Z",
     "iopub.status.idle": "2024-03-14T13:23:58.709412Z",
     "shell.execute_reply": "2024-03-14T13:23:58.708341Z"
    },
    "papermill": {
     "duration": 3.530861,
     "end_time": "2024-03-14T13:23:58.711964",
     "exception": false,
     "start_time": "2024-03-14T13:23:55.181103",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import polars as pl\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import lightgbm as lgb\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.metrics import roc_auc_score \n",
    "\n",
    "dataPath = \"/kaggle/input/home-credit-credit-risk-model-stability/\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "fbfeced9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-03-14T13:23:58.724657Z",
     "iopub.status.busy": "2024-03-14T13:23:58.723630Z",
     "iopub.status.idle": "2024-03-14T13:23:58.733573Z",
     "shell.execute_reply": "2024-03-14T13:23:58.732465Z"
    },
    "papermill": {
     "duration": 0.018574,
     "end_time": "2024-03-14T13:23:58.735905",
     "exception": false,
     "start_time": "2024-03-14T13:23:58.717331",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def set_table_dtypes(df: pl.DataFrame) -> pl.DataFrame:\n",
    "    # implement here all desired dtypes for tables\n",
    "    # the following is just an example\n",
    "    for col in df.columns:\n",
    "        # last letter of column name will help you determine the type\n",
    "        if col[-1] in (\"P\", \"A\"):\n",
    "            df = df.with_columns(pl.col(col).cast(pl.Float64).alias(col))\n",
    "\n",
    "    return df\n",
    "\n",
    "def convert_strings(df: pd.DataFrame) -> pd.DataFrame:\n",
    "    for col in df.columns:  \n",
    "        if df[col].dtype.name in ['object', 'string']:\n",
    "            df[col] = df[col].astype(\"string\").astype('category')\n",
    "            current_categories = df[col].cat.categories\n",
    "            new_categories = current_categories.to_list() + [\"Unknown\"]\n",
    "            new_dtype = pd.CategoricalDtype(categories=new_categories, ordered=True)\n",
    "            df[col] = df[col].astype(new_dtype)\n",
    "    return df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "0c71dce2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-03-14T13:23:58.747739Z",
     "iopub.status.busy": "2024-03-14T13:23:58.747399Z",
     "iopub.status.idle": "2024-03-14T13:24:15.347479Z",
     "shell.execute_reply": "2024-03-14T13:24:15.346640Z"
    },
    "papermill": {
     "duration": 16.609215,
     "end_time": "2024-03-14T13:24:15.350167",
     "exception": false,
     "start_time": "2024-03-14T13:23:58.740952",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "train_basetable = pl.read_csv(dataPath + \"csv_files/train/train_base.csv\")\n",
    "train_static = pl.concat(\n",
    "    [\n",
    "        pl.read_csv(dataPath + \"csv_files/train/train_static_0_0.csv\").pipe(set_table_dtypes),\n",
    "        pl.read_csv(dataPath + \"csv_files/train/train_static_0_1.csv\").pipe(set_table_dtypes),\n",
    "    ],\n",
    "    how=\"vertical_relaxed\",\n",
    ")\n",
    "train_static_cb = pl.read_csv(dataPath + \"csv_files/train/train_static_cb_0.csv\").pipe(set_table_dtypes)\n",
    "train_person_1 = pl.read_csv(dataPath + \"csv_files/train/train_person_1.csv\").pipe(set_table_dtypes) \n",
    "train_credit_bureau_b_2 = pl.read_csv(dataPath + \"csv_files/train/train_credit_bureau_b_2.csv\").pipe(set_table_dtypes) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "7bbc5c7c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-03-14T13:24:15.361915Z",
     "iopub.status.busy": "2024-03-14T13:24:15.361064Z",
     "iopub.status.idle": "2024-03-14T13:24:15.377070Z",
     "shell.execute_reply": "2024-03-14T13:24:15.375800Z"
    },
    "papermill": {
     "duration": 0.025993,
     "end_time": "2024-03-14T13:24:15.381241",
     "exception": false,
     "start_time": "2024-03-14T13:24:15.355248",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "train_basetable： shape: (1_526_659, 5)\n",
      "┌─────────┬───────────────┬────────┬──────────┬────────┐\n",
      "│ case_id ┆ date_decision ┆ MONTH  ┆ WEEK_NUM ┆ target │\n",
      "│ ---     ┆ ---           ┆ ---    ┆ ---      ┆ ---    │\n",
      "│ i64     ┆ str           ┆ i64    ┆ i64      ┆ i64    │\n",
      "╞═════════╪═══════════════╪════════╪══════════╪════════╡\n",
      "│ 0       ┆ 2019-01-03    ┆ 201901 ┆ 0        ┆ 0      │\n",
      "│ 1       ┆ 2019-01-03    ┆ 201901 ┆ 0        ┆ 0      │\n",
      "│ 2       ┆ 2019-01-04    ┆ 201901 ┆ 0        ┆ 0      │\n",
      "│ 3       ┆ 2019-01-03    ┆ 201901 ┆ 0        ┆ 0      │\n",
      "│ 4       ┆ 2019-01-04    ┆ 201901 ┆ 0        ┆ 1      │\n",
      "│ …       ┆ …             ┆ …      ┆ …        ┆ …      │\n",
      "│ 2703450 ┆ 2020-10-05    ┆ 202010 ┆ 91       ┆ 0      │\n",
      "│ 2703451 ┆ 2020-10-05    ┆ 202010 ┆ 91       ┆ 0      │\n",
      "│ 2703452 ┆ 2020-10-05    ┆ 202010 ┆ 91       ┆ 0      │\n",
      "│ 2703453 ┆ 2020-10-05    ┆ 202010 ┆ 91       ┆ 0      │\n",
      "│ 2703454 ┆ 2020-10-05    ┆ 202010 ┆ 91       ┆ 0      │\n",
      "└─────────┴───────────────┴────────┴──────────┴────────┘\n",
      "train_static： shape: (1_526_659, 168)\n",
      "┌─────────┬────────────┬───────────┬───────────┬───┬───────────┬───────────┬───────────┬───────────┐\n",
      "│ case_id ┆ actualdpdt ┆ amtinstpa ┆ annuity_7 ┆ … ┆ totinstal ┆ twobodfil ┆ typesuite ┆ validfrom │\n",
      "│ ---     ┆ olerance_3 ┆ idbefduel ┆ 80A       ┆   ┆ last1m_45 ┆ ling_608L ┆ _864L     ┆ _1069D    │\n",
      "│ i64     ┆ 44P        ┆ 24m_41871 ┆ ---       ┆   ┆ 25188A    ┆ ---       ┆ ---       ┆ ---       │\n",
      "│         ┆ ---        ┆ 15A       ┆ f64       ┆   ┆ ---       ┆ str       ┆ str       ┆ str       │\n",
      "│         ┆ f64        ┆ ---       ┆           ┆   ┆ f64       ┆           ┆           ┆           │\n",
      "│         ┆            ┆ f64       ┆           ┆   ┆           ┆           ┆           ┆           │\n",
      "╞═════════╪════════════╪═══════════╪═══════════╪═══╪═══════════╪═══════════╪═══════════╪═══════════╡\n",
      "│ 0       ┆ null       ┆ null      ┆ 1917.6    ┆ … ┆ null      ┆ BO        ┆ null      ┆ null      │\n",
      "│ 1       ┆ null       ┆ null      ┆ 3134.0    ┆ … ┆ null      ┆ BO        ┆ null      ┆ null      │\n",
      "│ 2       ┆ null       ┆ null      ┆ 4937.0    ┆ … ┆ null      ┆ BO        ┆ AL        ┆ null      │\n",
      "│ 3       ┆ null       ┆ null      ┆ 4643.6    ┆ … ┆ null      ┆ BO        ┆ AL        ┆ null      │\n",
      "│ 4       ┆ null       ┆ null      ┆ 3390.2    ┆ … ┆ null      ┆ BO        ┆ AL        ┆ null      │\n",
      "│ …       ┆ …          ┆ …         ┆ …         ┆ … ┆ …         ┆ …         ┆ …         ┆ …         │\n",
      "│ 2703450 ┆ 0.0        ┆ 176561.36 ┆ 3675.4001 ┆ … ┆ 14346.319 ┆ FO        ┆ null      ┆ null      │\n",
      "│ 2703451 ┆ 0.0        ┆ 301276.47 ┆ 7088.6    ┆ … ┆ 40499.805 ┆ FO        ┆ null      ┆ null      │\n",
      "│ 2703452 ┆ 0.0        ┆ 14232.4   ┆ 7788.8003 ┆ … ┆ null      ┆ BO        ┆ null      ┆ null      │\n",
      "│ 2703453 ┆ 0.0        ┆ 197371.58 ┆ 1195.4    ┆ … ┆ 5654.4    ┆ BO        ┆ null      ┆ null      │\n",
      "│ 2703454 ┆ 0.0        ┆ 82949.6   ┆ 4533.8003 ┆ … ┆ 2986.8    ┆ FO        ┆ null      ┆ null      │\n",
      "└─────────┴────────────┴───────────┴───────────┴───┴───────────┴───────────┴───────────┴───────────┘\n",
      "train_static_cb： shape: (1_500_476, 53)\n",
      "┌─────────┬────────────┬───────────┬───────────┬───┬───────────┬───────────┬───────────┬───────────┐\n",
      "│ case_id ┆ assignment ┆ assignmen ┆ assignmen ┆ … ┆ riskasses ┆ riskasses ┆ secondqua ┆ thirdquar │\n",
      "│ ---     ┆ date_238D  ┆ tdate_452 ┆ tdate_495 ┆   ┆ ment_302T ┆ ment_940T ┆ rter_766L ┆ ter_1082L │\n",
      "│ i64     ┆ ---        ┆ 7235D     ┆ 5616D     ┆   ┆ ---       ┆ ---       ┆ ---       ┆ ---       │\n",
      "│         ┆ str        ┆ ---       ┆ ---       ┆   ┆ str       ┆ f64       ┆ f64       ┆ f64       │\n",
      "│         ┆            ┆ str       ┆ str       ┆   ┆           ┆           ┆           ┆           │\n",
      "╞═════════╪════════════╪═══════════╪═══════════╪═══╪═══════════╪═══════════╪═══════════╪═══════════╡\n",
      "│ 357     ┆ null       ┆ null      ┆ null      ┆ … ┆ null      ┆ null      ┆ null      ┆ null      │\n",
      "│ 381     ┆ null       ┆ null      ┆ null      ┆ … ┆ null      ┆ null      ┆ null      ┆ null      │\n",
      "│ 388     ┆ null       ┆ null      ┆ null      ┆ … ┆ null      ┆ null      ┆ 3.0       ┆ 5.0       │\n",
      "│ 405     ┆ null       ┆ null      ┆ null      ┆ … ┆ null      ┆ null      ┆ 2.0       ┆ 0.0       │\n",
      "│ 409     ┆ null       ┆ null      ┆ null      ┆ … ┆ null      ┆ null      ┆ 0.0       ┆ 4.0       │\n",
      "│ …       ┆ …          ┆ …         ┆ …         ┆ … ┆ …         ┆ …         ┆ …         ┆ …         │\n",
      "│ 2703450 ┆ null       ┆ null      ┆ 2018-01-1 ┆ … ┆ null      ┆ null      ┆ 1.0       ┆ 1.0       │\n",
      "│         ┆            ┆           ┆ 1         ┆   ┆           ┆           ┆           ┆           │\n",
      "│ 2703451 ┆ null       ┆ null      ┆ 2005-06-1 ┆ … ┆ null      ┆ null      ┆ 1.0       ┆ 2.0       │\n",
      "│         ┆            ┆           ┆ 5         ┆   ┆           ┆           ┆           ┆           │\n",
      "│ 2703452 ┆ null       ┆ null      ┆ null      ┆ … ┆ null      ┆ null      ┆ 0.0       ┆ 4.0       │\n",
      "│ 2703453 ┆ null       ┆ null      ┆ 2008-02-1 ┆ … ┆ null      ┆ null      ┆ 2.0       ┆ 1.0       │\n",
      "│         ┆            ┆           ┆ 5         ┆   ┆           ┆           ┆           ┆           │\n",
      "│ 2703454 ┆ null       ┆ null      ┆ 2000-08-2 ┆ … ┆ null      ┆ null      ┆ 2.0       ┆ 1.0       │\n",
      "│         ┆            ┆           ┆ 2         ┆   ┆           ┆           ┆           ┆           │\n",
      "└─────────┴────────────┴───────────┴───────────┴───┴───────────┴───────────┴───────────┴───────────┘\n",
      "train_person_1： shape: (2_973_991, 37)\n",
      "┌─────────┬────────────┬────────────┬───────────┬───┬───────────┬───────────┬──────────┬───────────┐\n",
      "│ case_id ┆ birth_259D ┆ birthdate_ ┆ childnum_ ┆ … ┆ role_993L ┆ safeguara ┆ sex_738L ┆ type_25L  │\n",
      "│ ---     ┆ ---        ┆ 87D        ┆ 185L      ┆   ┆ ---       ┆ ntyflag_4 ┆ ---      ┆ ---       │\n",
      "│ i64     ┆ str        ┆ ---        ┆ ---       ┆   ┆ str       ┆ 11L       ┆ str      ┆ str       │\n",
      "│         ┆            ┆ str        ┆ f64       ┆   ┆           ┆ ---       ┆          ┆           │\n",
      "│         ┆            ┆            ┆           ┆   ┆           ┆ bool      ┆          ┆           │\n",
      "╞═════════╪════════════╪════════════╪═══════════╪═══╪═══════════╪═══════════╪══════════╪═══════════╡\n",
      "│ 0       ┆ 1986-07-01 ┆ null       ┆ null      ┆ … ┆ null      ┆ true      ┆ F        ┆ PRIMARY_M │\n",
      "│         ┆            ┆            ┆           ┆   ┆           ┆           ┆          ┆ OBILE     │\n",
      "│ 0       ┆ null       ┆ null       ┆ null      ┆ … ┆ null      ┆ null      ┆ null     ┆ PHONE     │\n",
      "│ 0       ┆ null       ┆ null       ┆ null      ┆ … ┆ null      ┆ null      ┆ null     ┆ PHONE     │\n",
      "│ 0       ┆ null       ┆ null       ┆ null      ┆ … ┆ null      ┆ null      ┆ null     ┆ PHONE     │\n",
      "│ 1       ┆ 1957-08-01 ┆ null       ┆ null      ┆ … ┆ null      ┆ true      ┆ M        ┆ PRIMARY_M │\n",
      "│         ┆            ┆            ┆           ┆   ┆           ┆           ┆          ┆ OBILE     │\n",
      "│ …       ┆ …          ┆ …          ┆ …         ┆ … ┆ …         ┆ …         ┆ …        ┆ …         │\n",
      "│ 2703451 ┆ null       ┆ null       ┆ null      ┆ … ┆ null      ┆ null      ┆ null     ┆ HOME_PHON │\n",
      "│         ┆            ┆            ┆           ┆   ┆           ┆           ┆          ┆ E         │\n",
      "│ 2703452 ┆ 1977-08-01 ┆ null       ┆ null      ┆ … ┆ null      ┆ false     ┆ M        ┆ PRIMARY_M │\n",
      "│         ┆            ┆            ┆           ┆   ┆           ┆           ┆          ┆ OBILE     │\n",
      "│ 2703453 ┆ 1950-02-01 ┆ null       ┆ null      ┆ … ┆ null      ┆ false     ┆ F        ┆ PRIMARY_M │\n",
      "│         ┆            ┆            ┆           ┆   ┆           ┆           ┆          ┆ OBILE     │\n",
      "│ 2703453 ┆ null       ┆ null       ┆ null      ┆ … ┆ null      ┆ null      ┆ null     ┆ HOME_PHON │\n",
      "│         ┆            ┆            ┆           ┆   ┆           ┆           ┆          ┆ E         │\n",
      "│ 2703454 ┆ 1948-04-01 ┆ null       ┆ null      ┆ … ┆ null      ┆ true      ┆ F        ┆ PRIMARY_M │\n",
      "│         ┆            ┆            ┆           ┆   ┆           ┆           ┆          ┆ OBILE     │\n",
      "└─────────┴────────────┴────────────┴───────────┴───┴───────────┴───────────┴──────────┴───────────┘\n",
      "train_credit_bureau_b_2： shape: (1_286_755, 6)\n",
      "┌─────────┬────────────┬────────────┬─────────────────┬────────────────────┬───────────────────────┐\n",
      "│ case_id ┆ num_group1 ┆ num_group2 ┆ pmts_date_1107D ┆ pmts_dpdvalue_108P ┆ pmts_pmtsoverdue_635A │\n",
      "│ ---     ┆ ---        ┆ ---        ┆ ---             ┆ ---                ┆ ---                   │\n",
      "│ i64     ┆ i64        ┆ i64        ┆ str             ┆ f64                ┆ f64                   │\n",
      "╞═════════╪════════════╪════════════╪═════════════════╪════════════════════╪═══════════════════════╡\n",
      "│ 467     ┆ 0          ┆ 0          ┆ 2018-11-15      ┆ null               ┆ null                  │\n",
      "│ 467     ┆ 0          ┆ 1          ┆ 2018-12-15      ┆ null               ┆ null                  │\n",
      "│ 467     ┆ 1          ┆ 0          ┆ 2018-12-15      ┆ null               ┆ null                  │\n",
      "│ 467     ┆ 2          ┆ 0          ┆ 2016-10-15      ┆ 0.0                ┆ 0.0                   │\n",
      "│ 467     ┆ 2          ┆ 1          ┆ 2016-11-15      ┆ 0.0                ┆ 0.0                   │\n",
      "│ …       ┆ …          ┆ …          ┆ …               ┆ …                  ┆ …                     │\n",
      "│ 2703436 ┆ 1          ┆ 31         ┆ 2020-05-15      ┆ 0.0                ┆ 0.0                   │\n",
      "│ 2703436 ┆ 1          ┆ 32         ┆ 2020-06-15      ┆ 0.0                ┆ 0.0                   │\n",
      "│ 2703436 ┆ 1          ┆ 33         ┆ 2020-07-15      ┆ 0.0                ┆ 0.0                   │\n",
      "│ 2703436 ┆ 1          ┆ 34         ┆ 2020-08-15      ┆ 0.0                ┆ 0.0                   │\n",
      "│ 2703436 ┆ 1          ┆ 35         ┆ 2020-09-15      ┆ 0.0                ┆ 0.0                   │\n",
      "└─────────┴────────────┴────────────┴─────────────────┴────────────────────┴───────────────────────┘\n"
     ]
    }
   ],
   "source": [
    "print('train_basetable：', train_basetable)\n",
    "print('train_static：', train_static)\n",
    "print('train_static_cb：', train_static_cb)\n",
    "print('train_person_1：', train_person_1)\n",
    "print('train_credit_bureau_b_2：', train_credit_bureau_b_2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "dec370d8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-03-14T13:24:15.393609Z",
     "iopub.status.busy": "2024-03-14T13:24:15.392763Z",
     "iopub.status.idle": "2024-03-14T13:24:15.449295Z",
     "shell.execute_reply": "2024-03-14T13:24:15.448344Z"
    },
    "papermill": {
     "duration": 0.065096,
     "end_time": "2024-03-14T13:24:15.451615",
     "exception": false,
     "start_time": "2024-03-14T13:24:15.386519",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "test_basetable = pl.read_csv(dataPath + \"csv_files/test/test_base.csv\")\n",
    "test_static = pl.concat(\n",
    "    [\n",
    "        pl.read_csv(dataPath + \"csv_files/test/test_static_0_0.csv\").pipe(set_table_dtypes),\n",
    "        pl.read_csv(dataPath + \"csv_files/test/test_static_0_1.csv\").pipe(set_table_dtypes),\n",
    "        pl.read_csv(dataPath + \"csv_files/test/test_static_0_2.csv\").pipe(set_table_dtypes),\n",
    "    ],\n",
    "    how=\"vertical_relaxed\",\n",
    ")\n",
    "test_static_cb = pl.read_csv(dataPath + \"csv_files/test/test_static_cb_0.csv\").pipe(set_table_dtypes)\n",
    "test_person_1 = pl.read_csv(dataPath + \"csv_files/test/test_person_1.csv\").pipe(set_table_dtypes) \n",
    "test_credit_bureau_b_2 = pl.read_csv(dataPath + \"csv_files/test/test_credit_bureau_b_2.csv\").pipe(set_table_dtypes) \n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "18c8a042",
   "metadata": {
    "papermill": {
     "duration": 0.004898,
     "end_time": "2024-03-14T13:24:15.462282",
     "exception": false,
     "start_time": "2024-03-14T13:24:15.457384",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Feature engineering¶"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "d7445ecb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-03-14T13:24:15.474439Z",
     "iopub.status.busy": "2024-03-14T13:24:15.473742Z",
     "iopub.status.idle": "2024-03-14T13:24:20.890829Z",
     "shell.execute_reply": "2024-03-14T13:24:20.889615Z"
    },
    "papermill": {
     "duration": 5.426029,
     "end_time": "2024-03-14T13:24:20.893451",
     "exception": false,
     "start_time": "2024-03-14T13:24:15.467422",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['amtinstpaidbefduel24m_4187115A', 'annuity_780A', 'annuitynextmonth_57A', 'avginstallast24m_3658937A', 'avglnamtstart24m_4525187A', 'avgoutstandbalancel6m_4187114A', 'avgpmtlast12m_4525200A', 'credamount_770A', 'currdebt_22A', 'currdebtcredtyperange_828A', 'disbursedcredamount_1113A', 'downpmt_116A', 'inittransactionamount_650A', 'lastapprcommoditycat_1041M', 'lastapprcommoditytypec_5251766M', 'lastapprcredamount_781A', 'lastcancelreason_561M', 'lastotherinc_902A', 'lastotherlnsexpense_631A', 'lastrejectcommoditycat_161M', 'lastrejectcommodtypec_5251769M', 'lastrejectcredamount_222A', 'lastrejectreason_759M', 'lastrejectreasonclient_4145040M', 'maininc_215A', 'maxannuity_159A', 'maxannuity_4075009A', 'maxdebt4_972A', 'maxinstallast24m_3658928A', 'maxlnamtstart6m_4525199A', 'maxoutstandbalancel12m_4187113A', 'maxpmtlast3m_4525190A', 'previouscontdistrict_112M', 'price_1097A', 'sumoutstandtotal_3546847A', 'sumoutstandtotalest_4493215A', 'totaldebt_9A', 'totalsettled_863A', 'totinstallast1m_4525188A']\n",
      "['description_5085714M', 'education_1103M', 'education_88M', 'maritalst_385M', 'maritalst_893M', 'pmtaverage_3A', 'pmtaverage_4527227A', 'pmtaverage_4955615A', 'pmtssum_45A']\n"
     ]
    }
   ],
   "source": [
    "# We need to use aggregation functions in tables with depth > 1, so tables that contain num_group1 column or \n",
    "# also num_group2 column.\n",
    "train_person_1_feats_1 = train_person_1.group_by(\"case_id\").agg(\n",
    "    pl.col(\"mainoccupationinc_384A\").max().alias(\"mainoccupationinc_384A_max\"),\n",
    "    (pl.col(\"incometype_1044T\") == \"SELFEMPLOYED\").max().alias(\"mainoccupationinc_384A_any_selfemployed\")\n",
    ")\n",
    "\n",
    "# Here num_group1=0 has special meaning, it is the person who applied for the loan.\n",
    "train_person_1_feats_2 = train_person_1.select([\"case_id\", \"num_group1\", \"housetype_905L\"]).filter(\n",
    "    pl.col(\"num_group1\") == 0\n",
    ").drop(\"num_group1\").rename({\"housetype_905L\": \"person_housetype\"})\n",
    "\n",
    "# Here we have num_goup1 and num_group2, so we need to aggregate again.\n",
    "train_credit_bureau_b_2_feats = train_credit_bureau_b_2.group_by(\"case_id\").agg(\n",
    "    pl.col(\"pmts_pmtsoverdue_635A\").max().alias(\"pmts_pmtsoverdue_635A_max\"),\n",
    "    (pl.col(\"pmts_dpdvalue_108P\") > 31).max().alias(\"pmts_dpdvalue_108P_over31\")\n",
    ")\n",
    "\n",
    "# We will process in this examples only A-type and M-type columns, so we need to select them.\n",
    "# A-typeとは？ M-typeとは？\n",
    "selected_static_cols = []\n",
    "for col in train_static.columns:\n",
    "    if col[-1] in (\"A\", \"M\"):\n",
    "        selected_static_cols.append(col)\n",
    "print(selected_static_cols)\n",
    "\n",
    "selected_static_cb_cols = []\n",
    "for col in train_static_cb.columns:\n",
    "    if col[-1] in (\"A\", \"M\"):\n",
    "        selected_static_cb_cols.append(col)\n",
    "print(selected_static_cb_cols)\n",
    "\n",
    "# Join all tables together.\n",
    "data = train_basetable.join(\n",
    "    train_static.select([\"case_id\"]+selected_static_cols), how=\"left\", on=\"case_id\"\n",
    ").join(\n",
    "    train_static_cb.select([\"case_id\"]+selected_static_cb_cols), how=\"left\", on=\"case_id\"\n",
    ").join(\n",
    "    train_person_1_feats_1, how=\"left\", on=\"case_id\"\n",
    ").join(\n",
    "    train_person_1_feats_2, how=\"left\", on=\"case_id\"\n",
    ").join(\n",
    "    train_credit_bureau_b_2_feats, how=\"left\", on=\"case_id\"\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "912478d7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-03-14T13:24:20.907946Z",
     "iopub.status.busy": "2024-03-14T13:24:20.907066Z",
     "iopub.status.idle": "2024-03-14T13:24:20.914360Z",
     "shell.execute_reply": "2024-03-14T13:24:20.913635Z"
    },
    "papermill": {
     "duration": 0.018156,
     "end_time": "2024-03-14T13:24:20.918012",
     "exception": false,
     "start_time": "2024-03-14T13:24:20.899856",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "train_person_1_feats_1 shape: (1_526_659, 3)\n",
      "┌─────────┬────────────────────────────┬───────────────────────────────────┐\n",
      "│ case_id ┆ mainoccupationinc_384A_max ┆ mainoccupationinc_384A_any_selfe… │\n",
      "│ ---     ┆ ---                        ┆ ---                               │\n",
      "│ i64     ┆ f64                        ┆ bool                              │\n",
      "╞═════════╪════════════════════════════╪═══════════════════════════════════╡\n",
      "│ 625165  ┆ 100000.0                   ┆ false                             │\n",
      "│ 1448903 ┆ 65000.0                    ┆ false                             │\n",
      "│ 1587585 ┆ 60000.0                    ┆ false                             │\n",
      "│ 1735136 ┆ 30000.0                    ┆ false                             │\n",
      "│ 678432  ┆ 30000.0                    ┆ false                             │\n",
      "│ …       ┆ …                          ┆ …                                 │\n",
      "│ 917760  ┆ 40000.0                    ┆ false                             │\n",
      "│ 1501594 ┆ 68000.0                    ┆ false                             │\n",
      "│ 1018050 ┆ 26000.0                    ┆ false                             │\n",
      "│ 722992  ┆ 36000.0                    ┆ false                             │\n",
      "│ 776226  ┆ 14000.0                    ┆ false                             │\n",
      "└─────────┴────────────────────────────┴───────────────────────────────────┘\n",
      "train_person_1_feats_2 shape: (1_526_659, 2)\n",
      "┌─────────┬──────────────────┐\n",
      "│ case_id ┆ person_housetype │\n",
      "│ ---     ┆ ---              │\n",
      "│ i64     ┆ str              │\n",
      "╞═════════╪══════════════════╡\n",
      "│ 0       ┆ null             │\n",
      "│ 1       ┆ null             │\n",
      "│ 2       ┆ null             │\n",
      "│ 3       ┆ null             │\n",
      "│ 4       ┆ null             │\n",
      "│ …       ┆ …                │\n",
      "│ 2703450 ┆ OWNED            │\n",
      "│ 2703451 ┆ null             │\n",
      "│ 2703452 ┆ null             │\n",
      "│ 2703453 ┆ null             │\n",
      "│ 2703454 ┆ null             │\n",
      "└─────────┴──────────────────┘\n",
      "train_credit_bureau_b_2_feats shape: (36_447, 3)\n",
      "┌─────────┬───────────────────────────┬───────────────────────────┐\n",
      "│ case_id ┆ pmts_pmtsoverdue_635A_max ┆ pmts_dpdvalue_108P_over31 │\n",
      "│ ---     ┆ ---                       ┆ ---                       │\n",
      "│ i64     ┆ f64                       ┆ bool                      │\n",
      "╞═════════╪═══════════════════════════╪═══════════════════════════╡\n",
      "│ 1840839 ┆ 5.0                       ┆ true                      │\n",
      "│ 867501  ┆ 1.4                       ┆ true                      │\n",
      "│ 981293  ┆ 0.8                       ┆ true                      │\n",
      "│ 1456465 ┆ 0.0                       ┆ false                     │\n",
      "│ 1567360 ┆ 0.0                       ┆ false                     │\n",
      "│ …       ┆ …                         ┆ …                         │\n",
      "│ 1701933 ┆ 5.8                       ┆ false                     │\n",
      "│ 1920269 ┆ 0.0                       ┆ false                     │\n",
      "│ 1371320 ┆ 1.4                       ┆ true                      │\n",
      "│ 1567937 ┆ 0.0                       ┆ false                     │\n",
      "│ 750529  ┆ 0.0                       ┆ false                     │\n",
      "└─────────┴───────────────────────────┴───────────────────────────┘\n",
      "selected_static_cols ['amtinstpaidbefduel24m_4187115A', 'annuity_780A', 'annuitynextmonth_57A', 'avginstallast24m_3658937A', 'avglnamtstart24m_4525187A', 'avgoutstandbalancel6m_4187114A', 'avgpmtlast12m_4525200A', 'credamount_770A', 'currdebt_22A', 'currdebtcredtyperange_828A', 'disbursedcredamount_1113A', 'downpmt_116A', 'inittransactionamount_650A', 'lastapprcommoditycat_1041M', 'lastapprcommoditytypec_5251766M', 'lastapprcredamount_781A', 'lastcancelreason_561M', 'lastotherinc_902A', 'lastotherlnsexpense_631A', 'lastrejectcommoditycat_161M', 'lastrejectcommodtypec_5251769M', 'lastrejectcredamount_222A', 'lastrejectreason_759M', 'lastrejectreasonclient_4145040M', 'maininc_215A', 'maxannuity_159A', 'maxannuity_4075009A', 'maxdebt4_972A', 'maxinstallast24m_3658928A', 'maxlnamtstart6m_4525199A', 'maxoutstandbalancel12m_4187113A', 'maxpmtlast3m_4525190A', 'previouscontdistrict_112M', 'price_1097A', 'sumoutstandtotal_3546847A', 'sumoutstandtotalest_4493215A', 'totaldebt_9A', 'totalsettled_863A', 'totinstallast1m_4525188A']\n",
      "selected_static_cb_cols ['description_5085714M', 'education_1103M', 'education_88M', 'maritalst_385M', 'maritalst_893M', 'pmtaverage_3A', 'pmtaverage_4527227A', 'pmtaverage_4955615A', 'pmtssum_45A']\n",
      "data shape: (1_526_659, 58)\n",
      "┌─────────┬────────────┬────────┬──────────┬───┬────────────┬────────────┬────────────┬────────────┐\n",
      "│ case_id ┆ date_decis ┆ MONTH  ┆ WEEK_NUM ┆ … ┆ mainoccupa ┆ person_hou ┆ pmts_pmtso ┆ pmts_dpdva │\n",
      "│ ---     ┆ ion        ┆ ---    ┆ ---      ┆   ┆ tioninc_38 ┆ setype     ┆ verdue_635 ┆ lue_108P_o │\n",
      "│ i64     ┆ ---        ┆ i64    ┆ i64      ┆   ┆ 4A_any_sel ┆ ---        ┆ A_max      ┆ ver31      │\n",
      "│         ┆ str        ┆        ┆          ┆   ┆ fe…        ┆ str        ┆ ---        ┆ ---        │\n",
      "│         ┆            ┆        ┆          ┆   ┆ ---        ┆            ┆ f64        ┆ bool       │\n",
      "│         ┆            ┆        ┆          ┆   ┆ bool       ┆            ┆            ┆            │\n",
      "╞═════════╪════════════╪════════╪══════════╪═══╪════════════╪════════════╪════════════╪════════════╡\n",
      "│ 0       ┆ 2019-01-03 ┆ 201901 ┆ 0        ┆ … ┆ false      ┆ null       ┆ null       ┆ null       │\n",
      "│ 1       ┆ 2019-01-03 ┆ 201901 ┆ 0        ┆ … ┆ false      ┆ null       ┆ null       ┆ null       │\n",
      "│ 2       ┆ 2019-01-04 ┆ 201901 ┆ 0        ┆ … ┆ false      ┆ null       ┆ null       ┆ null       │\n",
      "│ 3       ┆ 2019-01-03 ┆ 201901 ┆ 0        ┆ … ┆ false      ┆ null       ┆ null       ┆ null       │\n",
      "│ 4       ┆ 2019-01-04 ┆ 201901 ┆ 0        ┆ … ┆ false      ┆ null       ┆ null       ┆ null       │\n",
      "│ …       ┆ …          ┆ …      ┆ …        ┆ … ┆ …          ┆ …          ┆ …          ┆ …          │\n",
      "│ 2703450 ┆ 2020-10-05 ┆ 202010 ┆ 91       ┆ … ┆ false      ┆ OWNED      ┆ null       ┆ null       │\n",
      "│ 2703451 ┆ 2020-10-05 ┆ 202010 ┆ 91       ┆ … ┆ false      ┆ null       ┆ null       ┆ null       │\n",
      "│ 2703452 ┆ 2020-10-05 ┆ 202010 ┆ 91       ┆ … ┆ false      ┆ null       ┆ null       ┆ null       │\n",
      "│ 2703453 ┆ 2020-10-05 ┆ 202010 ┆ 91       ┆ … ┆ false      ┆ null       ┆ null       ┆ null       │\n",
      "│ 2703454 ┆ 2020-10-05 ┆ 202010 ┆ 91       ┆ … ┆ false      ┆ null       ┆ null       ┆ null       │\n",
      "└─────────┴────────────┴────────┴──────────┴───┴────────────┴────────────┴────────────┴────────────┘\n"
     ]
    }
   ],
   "source": [
    "print('train_person_1_feats_1', train_person_1_feats_1)\n",
    "print('train_person_1_feats_2', train_person_1_feats_2)\n",
    "print('train_credit_bureau_b_2_feats', train_credit_bureau_b_2_feats)\n",
    "print('selected_static_cols', selected_static_cols)\n",
    "print('selected_static_cb_cols', selected_static_cb_cols)\n",
    "print('data', data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "45a668a5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-03-14T13:24:20.933594Z",
     "iopub.status.busy": "2024-03-14T13:24:20.933232Z",
     "iopub.status.idle": "2024-03-14T13:24:20.947439Z",
     "shell.execute_reply": "2024-03-14T13:24:20.946601Z"
    },
    "papermill": {
     "duration": 0.024825,
     "end_time": "2024-03-14T13:24:20.949996",
     "exception": false,
     "start_time": "2024-03-14T13:24:20.925171",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "test_person_1_feats_1 = test_person_1.group_by(\"case_id\").agg(\n",
    "    pl.col(\"mainoccupationinc_384A\").max().alias(\"mainoccupationinc_384A_max\"),\n",
    "    (pl.col(\"incometype_1044T\") == \"SELFEMPLOYED\").max().alias(\"mainoccupationinc_384A_any_selfemployed\")\n",
    ")\n",
    "\n",
    "test_person_1_feats_2 = test_person_1.select([\"case_id\", \"num_group1\", \"housetype_905L\"]).filter(\n",
    "    pl.col(\"num_group1\") == 0\n",
    ").drop(\"num_group1\").rename({\"housetype_905L\": \"person_housetype\"})\n",
    "\n",
    "test_credit_bureau_b_2_feats = test_credit_bureau_b_2.group_by(\"case_id\").agg(\n",
    "    pl.col(\"pmts_pmtsoverdue_635A\").max().alias(\"pmts_pmtsoverdue_635A_max\"),\n",
    "    (pl.col(\"pmts_dpdvalue_108P\") > 31).max().alias(\"pmts_dpdvalue_108P_over31\")\n",
    ")\n",
    "\n",
    "data_submission = test_basetable.join(\n",
    "    test_static.select([\"case_id\"]+selected_static_cols), how=\"left\", on=\"case_id\"\n",
    ").join(\n",
    "    test_static_cb.select([\"case_id\"]+selected_static_cb_cols), how=\"left\", on=\"case_id\"\n",
    ").join(\n",
    "    test_person_1_feats_1, how=\"left\", on=\"case_id\"\n",
    ").join(\n",
    "    test_person_1_feats_2, how=\"left\", on=\"case_id\"\n",
    ").join(\n",
    "    test_credit_bureau_b_2_feats, how=\"left\", on=\"case_id\"\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "9afe75ab",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-03-14T13:24:20.965565Z",
     "iopub.status.busy": "2024-03-14T13:24:20.964883Z",
     "iopub.status.idle": "2024-03-14T13:24:33.884889Z",
     "shell.execute_reply": "2024-03-14T13:24:33.879170Z"
    },
    "papermill": {
     "duration": 12.951546,
     "end_time": "2024-03-14T13:24:33.908345",
     "exception": false,
     "start_time": "2024-03-14T13:24:20.956799",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['amtinstpaidbefduel24m_4187115A', 'annuity_780A', 'annuitynextmonth_57A', 'avginstallast24m_3658937A', 'avglnamtstart24m_4525187A', 'avgoutstandbalancel6m_4187114A', 'avgpmtlast12m_4525200A', 'credamount_770A', 'currdebt_22A', 'currdebtcredtyperange_828A', 'disbursedcredamount_1113A', 'downpmt_116A', 'inittransactionamount_650A', 'lastapprcommoditycat_1041M', 'lastapprcommoditytypec_5251766M', 'lastapprcredamount_781A', 'lastcancelreason_561M', 'lastotherinc_902A', 'lastotherlnsexpense_631A', 'lastrejectcommoditycat_161M', 'lastrejectcommodtypec_5251769M', 'lastrejectcredamount_222A', 'lastrejectreason_759M', 'lastrejectreasonclient_4145040M', 'maininc_215A', 'maxannuity_159A', 'maxannuity_4075009A', 'maxdebt4_972A', 'maxinstallast24m_3658928A', 'maxlnamtstart6m_4525199A', 'maxoutstandbalancel12m_4187113A', 'maxpmtlast3m_4525190A', 'previouscontdistrict_112M', 'price_1097A', 'sumoutstandtotal_3546847A', 'sumoutstandtotalest_4493215A', 'totaldebt_9A', 'totalsettled_863A', 'totinstallast1m_4525188A', 'description_5085714M', 'education_1103M', 'education_88M', 'maritalst_385M', 'maritalst_893M', 'pmtaverage_3A', 'pmtaverage_4527227A', 'pmtaverage_4955615A', 'pmtssum_45A']\n"
     ]
    }
   ],
   "source": [
    "case_ids = data[\"case_id\"].unique().shuffle(seed=1)\n",
    "case_ids_train, case_ids_test = train_test_split(case_ids, train_size=0.6, random_state=1)\n",
    "case_ids_valid, case_ids_test = train_test_split(case_ids_test, train_size=0.5, random_state=1)\n",
    "\n",
    "cols_pred = []\n",
    "for col in data.columns:\n",
    "    if col[-1].isupper() and col[:-1].islower():\n",
    "        cols_pred.append(col)\n",
    "\n",
    "print(cols_pred)\n",
    "\n",
    "def from_polars_to_pandas(case_ids: pl.DataFrame) -> pl.DataFrame:\n",
    "    return (\n",
    "        data.filter(pl.col(\"case_id\").is_in(case_ids))[[\"case_id\", \"WEEK_NUM\", \"target\"]].to_pandas(),\n",
    "        data.filter(pl.col(\"case_id\").is_in(case_ids))[cols_pred].to_pandas(),\n",
    "        data.filter(pl.col(\"case_id\").is_in(case_ids))[\"target\"].to_pandas()\n",
    "    )\n",
    "\n",
    "base_train, X_train, y_train = from_polars_to_pandas(case_ids_train)\n",
    "base_valid, X_valid, y_valid = from_polars_to_pandas(case_ids_valid)\n",
    "base_test, X_test, y_test = from_polars_to_pandas(case_ids_test)\n",
    "\n",
    "for df in [X_train, X_valid, X_test]:\n",
    "    df = convert_strings(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "e9ebad71",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-03-14T13:24:33.940850Z",
     "iopub.status.busy": "2024-03-14T13:24:33.940071Z",
     "iopub.status.idle": "2024-03-14T13:24:33.945693Z",
     "shell.execute_reply": "2024-03-14T13:24:33.944740Z"
    },
    "papermill": {
     "duration": 0.021252,
     "end_time": "2024-03-14T13:24:33.949354",
     "exception": false,
     "start_time": "2024-03-14T13:24:33.928102",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train: (915995, 48)\n",
      "Valid: (305332, 48)\n",
      "Test: (305332, 48)\n"
     ]
    }
   ],
   "source": [
    "print(f\"Train: {X_train.shape}\")\n",
    "print(f\"Valid: {X_valid.shape}\")\n",
    "print(f\"Test: {X_test.shape}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bebf3782",
   "metadata": {
    "papermill": {
     "duration": 0.007057,
     "end_time": "2024-03-14T13:24:33.963594",
     "exception": false,
     "start_time": "2024-03-14T13:24:33.956537",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Training LightGBM"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "5369fe1a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-03-14T13:24:33.980218Z",
     "iopub.status.busy": "2024-03-14T13:24:33.979542Z",
     "iopub.status.idle": "2024-03-14T13:25:58.041718Z",
     "shell.execute_reply": "2024-03-14T13:25:58.040332Z"
    },
    "papermill": {
     "duration": 84.073357,
     "end_time": "2024-03-14T13:25:58.044171",
     "exception": false,
     "start_time": "2024-03-14T13:24:33.970814",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/site-packages/lightgbm/engine.py:172: UserWarning: Found `n_estimators` in params. Will use it instead of argument\n",
      "  _log_warning(f\"Found `{alias}` in params. Will use it instead of argument\")\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Training until validation scores don't improve for 10 rounds\n",
      "[50]\tvalid_0's auc: 0.705963\n",
      "[100]\tvalid_0's auc: 0.724362\n",
      "[150]\tvalid_0's auc: 0.731423\n",
      "[200]\tvalid_0's auc: 0.735874\n",
      "[250]\tvalid_0's auc: 0.739009\n",
      "[300]\tvalid_0's auc: 0.740965\n",
      "[350]\tvalid_0's auc: 0.742924\n",
      "[400]\tvalid_0's auc: 0.744582\n",
      "[450]\tvalid_0's auc: 0.745977\n",
      "[500]\tvalid_0's auc: 0.747033\n",
      "[550]\tvalid_0's auc: 0.747877\n",
      "[600]\tvalid_0's auc: 0.749039\n",
      "[650]\tvalid_0's auc: 0.750087\n",
      "[700]\tvalid_0's auc: 0.750863\n",
      "Early stopping, best iteration is:\n",
      "[739]\tvalid_0's auc: 0.751216\n"
     ]
    }
   ],
   "source": [
    "lgb_train = lgb.Dataset(X_train, label=y_train)\n",
    "lgb_valid = lgb.Dataset(X_valid, label=y_valid, reference=lgb_train)\n",
    "\n",
    "params = {\n",
    "    \"boosting_type\": \"gbdt\",\n",
    "    \"objective\": \"binary\",\n",
    "    \"metric\": \"auc\",\n",
    "    \"max_depth\": 3,\n",
    "    \"num_leaves\": 31,\n",
    "    \"learning_rate\": 0.05,\n",
    "    \"feature_fraction\": 0.9,\n",
    "    \"bagging_fraction\": 0.8,\n",
    "    \"bagging_freq\": 5,\n",
    "    \"n_estimators\": 1000,\n",
    "    \"verbose\": -1,\n",
    "}\n",
    "\n",
    "gbm = lgb.train(\n",
    "    params,\n",
    "    lgb_train,\n",
    "    valid_sets=lgb_valid,\n",
    "    callbacks=[lgb.log_evaluation(50), lgb.early_stopping(10)]\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "1ef7ae38",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-03-14T13:25:58.059471Z",
     "iopub.status.busy": "2024-03-14T13:25:58.059061Z",
     "iopub.status.idle": "2024-03-14T13:26:18.228748Z",
     "shell.execute_reply": "2024-03-14T13:26:18.227626Z"
    },
    "papermill": {
     "duration": 20.179906,
     "end_time": "2024-03-14T13:26:18.230753",
     "exception": false,
     "start_time": "2024-03-14T13:25:58.050847",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The AUC score on the train set is: 0.764122917660593\n",
      "The AUC score on the valid set is: 0.7512157223309048\n",
      "The AUC score on the test set is: 0.7483072129459662\n"
     ]
    }
   ],
   "source": [
    "for base, X in [(base_train, X_train), (base_valid, X_valid), (base_test, X_test)]:\n",
    "    y_pred = gbm.predict(X, num_iteration=gbm.best_iteration)\n",
    "    base[\"score\"] = y_pred\n",
    "\n",
    "print(f'The AUC score on the train set is: {roc_auc_score(base_train[\"target\"], base_train[\"score\"])}') \n",
    "print(f'The AUC score on the valid set is: {roc_auc_score(base_valid[\"target\"], base_valid[\"score\"])}') \n",
    "print(f'The AUC score on the test set is: {roc_auc_score(base_test[\"target\"], base_test[\"score\"])}')  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "8f80f03f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-03-14T13:26:18.246520Z",
     "iopub.status.busy": "2024-03-14T13:26:18.246144Z",
     "iopub.status.idle": "2024-03-14T13:26:19.271838Z",
     "shell.execute_reply": "2024-03-14T13:26:19.270487Z"
    },
    "papermill": {
     "duration": 1.036293,
     "end_time": "2024-03-14T13:26:19.274325",
     "exception": false,
     "start_time": "2024-03-14T13:26:18.238032",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The stability score on the train set is: 0.4976648127691175\n",
      "The stability score on the valid set is: 0.4726726686264489\n",
      "The stability score on the test set is: 0.4583643686935092\n"
     ]
    }
   ],
   "source": [
    "def gini_stability(base, w_fallingrate=88.0, w_resstd=-0.5):\n",
    "    gini_in_time = base.loc[:, [\"WEEK_NUM\", \"target\", \"score\"]]\\\n",
    "        .sort_values(\"WEEK_NUM\")\\\n",
    "        .groupby(\"WEEK_NUM\")[[\"target\", \"score\"]]\\\n",
    "        .apply(lambda x: 2*roc_auc_score(x[\"target\"], x[\"score\"])-1).tolist()\n",
    "    \n",
    "    x = np.arange(len(gini_in_time))\n",
    "    y = gini_in_time\n",
    "    a, b = np.polyfit(x, y, 1)\n",
    "    y_hat = a*x + b\n",
    "    residuals = y - y_hat\n",
    "    res_std = np.std(residuals)\n",
    "    avg_gini = np.mean(gini_in_time)\n",
    "    return avg_gini + w_fallingrate * min(0, a) + w_resstd * res_std\n",
    "\n",
    "stability_score_train = gini_stability(base_train)\n",
    "stability_score_valid = gini_stability(base_valid)\n",
    "stability_score_test = gini_stability(base_test)\n",
    "\n",
    "print(f'The stability score on the train set is: {stability_score_train}') \n",
    "print(f'The stability score on the valid set is: {stability_score_valid}') \n",
    "print(f'The stability score on the test set is: {stability_score_test}')  "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "714f39cf",
   "metadata": {
    "papermill": {
     "duration": 0.00691,
     "end_time": "2024-03-14T13:26:19.288587",
     "exception": false,
     "start_time": "2024-03-14T13:26:19.281677",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Submission"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "31b9fcf1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-03-14T13:26:19.304628Z",
     "iopub.status.busy": "2024-03-14T13:26:19.304206Z",
     "iopub.status.idle": "2024-03-14T13:26:19.410008Z",
     "shell.execute_reply": "2024-03-14T13:26:19.408811Z"
    },
    "papermill": {
     "duration": 0.116997,
     "end_time": "2024-03-14T13:26:19.412581",
     "exception": false,
     "start_time": "2024-03-14T13:26:19.295584",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "X_submission = data_submission[cols_pred].to_pandas()\n",
    "X_submission = convert_strings(X_submission)\n",
    "categorical_cols = X_train.select_dtypes(include=['category']).columns\n",
    "\n",
    "for col in categorical_cols:\n",
    "    train_categories = set(X_train[col].cat.categories)\n",
    "    submission_categories = set(X_submission[col].cat.categories)\n",
    "    new_categories = submission_categories - train_categories\n",
    "    X_submission.loc[X_submission[col].isin(new_categories), col] = \"Unknown\"\n",
    "    new_dtype = pd.CategoricalDtype(categories=train_categories, ordered=True)\n",
    "    X_train[col] = X_train[col].astype(new_dtype)\n",
    "    X_submission[col] = X_submission[col].astype(new_dtype)\n",
    "\n",
    "y_submission_pred = gbm.predict(X_submission, num_iteration=gbm.best_iteration)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "0f52fdde",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-03-14T13:26:19.428306Z",
     "iopub.status.busy": "2024-03-14T13:26:19.427926Z",
     "iopub.status.idle": "2024-03-14T13:26:19.442003Z",
     "shell.execute_reply": "2024-03-14T13:26:19.440931Z"
    },
    "papermill": {
     "duration": 0.024825,
     "end_time": "2024-03-14T13:26:19.444582",
     "exception": false,
     "start_time": "2024-03-14T13:26:19.419757",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "submission = pd.DataFrame({\n",
    "    \"case_id\": data_submission[\"case_id\"].to_numpy(),\n",
    "    \"score\": y_submission_pred\n",
    "}).set_index('case_id')\n",
    "submission.to_csv(\"./submission.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "43769425",
   "metadata": {
    "papermill": {
     "duration": 0.006787,
     "end_time": "2024-03-14T13:26:19.458720",
     "exception": false,
     "start_time": "2024-03-14T13:26:19.451933",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "databundleVersionId": 7921029,
     "sourceId": 50160,
     "sourceType": "competition"
    }
   ],
   "dockerImageVersionId": 30664,
   "isGpuEnabled": false,
   "isInternetEnabled": false,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 148.632966,
   "end_time": "2024-03-14T13:26:20.992941",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-03-14T13:23:52.359975",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
